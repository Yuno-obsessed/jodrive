/*
 * This file is generated by jOOQ.
 */
package sanity.nil.block.db.tables.records;


import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import sanity.nil.block.db.tables.Tasks;

import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TasksRecord extends UpdatableRecordImpl<TasksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>block_db.tasks.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>block_db.tasks.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>block_db.tasks.retries</code>.
     */
    public void setRetries(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>block_db.tasks.retries</code>.
     */
    public Short getRetries() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>block_db.tasks.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>block_db.tasks.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>block_db.tasks.action</code>.
     */
    public void setAction(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>block_db.tasks.action</code>.
     */
    public String getAction() {
        return (String) get(3);
    }

    /**
     * Setter for <code>block_db.tasks.object_id</code>.
     */
    public void setObjectId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>block_db.tasks.object_id</code>.
     */
    public String getObjectId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>block_db.tasks.status</code>.
     */
    public void setStatus(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>block_db.tasks.status</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>block_db.tasks.metadata</code>.
     */
    public void setMetadata(JSONB value) {
        set(6, value);
    }

    /**
     * Getter for <code>block_db.tasks.metadata</code>.
     */
    public JSONB getMetadata() {
        return (JSONB) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TasksRecord
     */
    public TasksRecord() {
        super(Tasks.TASKS);
    }

    /**
     * Create a detached, initialised TasksRecord
     */
    public TasksRecord(Integer id, Short retries, OffsetDateTime updatedAt, String action, String objectId, String status, JSONB metadata) {
        super(Tasks.TASKS);

        setId(id);
        setRetries(retries);
        setUpdatedAt(updatedAt);
        setAction(action);
        setObjectId(objectId);
        setStatus(status);
        setMetadata(metadata);
        resetChangedOnNotNull();
    }
}
