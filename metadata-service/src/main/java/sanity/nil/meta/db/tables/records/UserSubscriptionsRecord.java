/*
 * This file is generated by jOOQ.
 */
package sanity.nil.meta.db.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import sanity.nil.meta.db.tables.UserSubscriptions;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserSubscriptionsRecord extends UpdatableRecordImpl<UserSubscriptionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>metadata_db.user_subscriptions.id</code>.
     */
    public void setId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>metadata_db.user_subscriptions.id</code>.
     */
    public Short getId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>metadata_db.user_subscriptions.description</code>.
     */
    public void setDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>metadata_db.user_subscriptions.description</code>.
     */
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>metadata_db.user_subscriptions.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>metadata_db.user_subscriptions.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>metadata_db.user_subscriptions.storage_limit</code>.
     */
    public void setStorageLimit(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>metadata_db.user_subscriptions.storage_limit</code>.
     */
    public Long getStorageLimit() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>metadata_db.user_subscriptions.workspaces_limit</code>.
     */
    public void setWorkspacesLimit(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>metadata_db.user_subscriptions.workspaces_limit</code>.
     */
    public Integer getWorkspacesLimit() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserSubscriptionsRecord
     */
    public UserSubscriptionsRecord() {
        super(UserSubscriptions.USER_SUBSCRIPTIONS);
    }

    /**
     * Create a detached, initialised UserSubscriptionsRecord
     */
    public UserSubscriptionsRecord(Short id, String description, String title, Long storageLimit, Integer workspacesLimit) {
        super(UserSubscriptions.USER_SUBSCRIPTIONS);

        setId(id);
        setDescription(description);
        setTitle(title);
        setStorageLimit(storageLimit);
        setWorkspacesLimit(workspacesLimit);
        resetChangedOnNotNull();
    }
}
