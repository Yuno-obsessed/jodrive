/*
 * This file is generated by jOOQ.
 */
package sanity.nil.meta.db.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import sanity.nil.meta.db.tables.Links;

import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LinksRecord extends UpdatableRecordImpl<LinksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>metadata_db.links.link</code>.
     */
    public void setLink(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>metadata_db.links.link</code>.
     */
    public String getLink() {
        return (String) get(0);
    }

    /**
     * Setter for <code>metadata_db.links.issuer</code>.
     */
    public void setIssuer(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>metadata_db.links.issuer</code>.
     */
    public UUID getIssuer() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>metadata_db.links.times_used</code>.
     */
    public void setTimesUsed(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>metadata_db.links.times_used</code>.
     */
    public Integer getTimesUsed() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>metadata_db.links.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>metadata_db.links.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>metadata_db.links.expires_at</code>.
     */
    public void setExpiresAt(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>metadata_db.links.expires_at</code>.
     */
    public OffsetDateTime getExpiresAt() {
        return (OffsetDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinksRecord
     */
    public LinksRecord() {
        super(Links.LINKS);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    public LinksRecord(String link, UUID issuer, Integer timesUsed, OffsetDateTime createdAt, OffsetDateTime expiresAt) {
        super(Links.LINKS);

        setLink(link);
        setIssuer(issuer);
        setTimesUsed(timesUsed);
        setCreatedAt(createdAt);
        setExpiresAt(expiresAt);
        resetChangedOnNotNull();
    }
}
