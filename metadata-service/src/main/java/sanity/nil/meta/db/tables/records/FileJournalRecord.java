/*
 * This file is generated by jOOQ.
 */
package sanity.nil.meta.db.tables.records;


import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;
import sanity.nil.meta.db.tables.FileJournal;

import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FileJournalRecord extends UpdatableRecordImpl<FileJournalRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>metadata_db.file_journal.ws_id</code>.
     */
    public void setWsId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.ws_id</code>.
     */
    public Long getWsId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>metadata_db.file_journal.file_id</code>.
     */
    public void setFileId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.file_id</code>.
     */
    public Long getFileId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>metadata_db.file_journal.latest</code>.
     */
    public void setLatest(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.latest</code>.
     */
    public Short getLatest() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>metadata_db.file_journal.path</code>.
     */
    public void setPath(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.path</code>.
     */
    public String getPath() {
        return (String) get(3);
    }

    /**
     * Setter for <code>metadata_db.file_journal.uploader_id</code>.
     */
    public void setUploaderId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.uploader_id</code>.
     */
    public UUID getUploaderId() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>metadata_db.file_journal.state</code>.
     */
    public void setState(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.state</code>.
     */
    public String getState() {
        return (String) get(5);
    }

    /**
     * Setter for <code>metadata_db.file_journal.size</code>.
     */
    public void setSize(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.size</code>.
     */
    public Long getSize() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>metadata_db.file_journal.blocklist</code>.
     */
    public void setBlocklist(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.blocklist</code>.
     */
    public String getBlocklist() {
        return (String) get(7);
    }

    /**
     * Setter for <code>metadata_db.file_journal.history_id</code>.
     */
    public void setHistoryId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.history_id</code>.
     */
    public Integer getHistoryId() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>metadata_db.file_journal.updated_by</code>.
     */
    public void setUpdatedBy(UUID value) {
        set(9, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.updated_by</code>.
     */
    public UUID getUpdatedBy() {
        return (UUID) get(9);
    }

    /**
     * Setter for <code>metadata_db.file_journal.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for <code>metadata_db.file_journal.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>metadata_db.file_journal.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileJournalRecord
     */
    public FileJournalRecord() {
        super(FileJournal.FILE_JOURNAL);
    }

    /**
     * Create a detached, initialised FileJournalRecord
     */
    public FileJournalRecord(Long wsId, Long fileId, Short latest, String path, UUID uploaderId, String state, Long size, String blocklist, Integer historyId, UUID updatedBy, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(FileJournal.FILE_JOURNAL);

        setWsId(wsId);
        setFileId(fileId);
        setLatest(latest);
        setPath(path);
        setUploaderId(uploaderId);
        setState(state);
        setSize(size);
        setBlocklist(blocklist);
        setHistoryId(historyId);
        setUpdatedBy(updatedBy);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
