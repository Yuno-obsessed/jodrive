x-minio-common: &minio-common
  image: quay.io/minio/minio:latest
  command: server --address ":9000" --console-address ":9001" http://minio/minio.data{1...2}
  ports:
    - "9000:9000"
    - "9001:9001"
  environment:
    - MINIO_ROOT_USER=Q3AM3UQ867SPQQA43P2F
    - MINIO_ROOT_PASSWORD=zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG
  healthcheck:
    test: [ "CMD", "mc", "ready", "local" ]
    interval: 5s
    timeout: 5s
    retries: 5

services:
  jodrive-db:
    image: postgres:16-alpine
    container_name: jodrive-db
    hostname: jodrive-db
    restart: on-failure
    environment:
      POSTGRES_DB: jodrive
      POSTGRES_USER: sanity
      POSTGRES_PASSWORD: wordpass
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/users:rw
      - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  minio:
    <<: *minio-common
    hostname: minio
    volumes:
      - minio.data1-1:/minio.data1
      - minio.data1-2:/minio.data2

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.0
    hostname: keycloak
    container_name: keycloak
    environment:
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      HTTP_ADDRESS_FORWARDING: true
      KC_PROXY_HEADERS: xforwarded
    expose:
      - 7080
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7080/health/ready" ]
      interval: 15s
      timeout: 2s
      retries: 15
    command: [ "start-dev", "--http-port", "7080", "-Djava.net.preferIPv4Stack=true"]
    depends_on:
      jodrive-db:
        condition: service_started
    volumes:
      - ./config/keycloak/keycloak.conf:/opt/keycloak/conf/keycloak.conf

  redis:
    container_name: redis
    image: redis:alpine
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis.data:/data
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      timeout: 4s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      keycloak:
        condition: service_started
    volumes:
      - ./config/nginx/conf.dev/:/etc/nginx/conf.d/
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf

volumes:
  postgres.data: { }
  minio.data1-1: { }
  minio.data1-2: { }
  redis.data: { }